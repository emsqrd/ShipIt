name: Preview Web CI/CD

on:
  pull_request:
    branches: [master]
    paths:
      - 'frontend/**'
    types: [ready_for_review, synchronize]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.17.0'

      - name: Install root dependencies
        run: npm install --ignore-scripts

      - name: Run husky install explicitly
        run: npx husky install

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run frontend tests with coverage
        working-directory: ./frontend
        run: npm run test:coverage

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-coverage
          path: frontend/coverage

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Install OIDC Client
        run: npm install @actions/core@1.6.0 @actions/http-client

      - name: Get ID Token
        uses: actions/github-script@v6
        id: idtoken
        with:
          script: |
            return await core.getIDToken()
          result-encoding: string

      - name: Download frontend build artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend

      - name: Deploy Preview
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_MANGO_WAVE_08D00DD10 }}
          action: upload
          app_location: './frontend'
          api_location: ''
          output_location: 'dist'
          github_id_token: ${{ steps.idtoken.outputs.result }}
        env:
          VITE_SHIP_IT_API_URL: https://shipit-api.azurewebsites.net/api
